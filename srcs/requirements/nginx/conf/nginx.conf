server {
    listen 443 ssl;

    ssl_certificate /etc/nginx/ssl/zsyyida.crt;
    ssl_certificate_key /etc/nginx/ssl/zsyyida.key;

    ssl_protocols       TLSv1.2 TLSv1.3;

    server_name zsyyida.42.fr;
    root /var/www/;

    index  index.php index.html;

	ssl_session_timeout 10m;
    keepalive_timeout 70;
    # location / {
    #     try_files $uri /index.php?$args /index.html;
    #     add_header Last-Modified $date_gmt;
    #     add_header Cache-Control 'no-store, no-cache';
    #     if_modified_since off;
    #     expires off;
    #     etag off;
    # }
    location / {
       try_files $uri $uri/ =404;
    }
    location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_index index.php;
		fastcgi_pass wordpress:9000;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}
#FastCGI offers a faster, more scalable, and resource-efficient way for web servers to communicate with external applications compared to CGI. It's a widely used technology for handling dynamic content generation in web applications written in languages like PHP, Python, and Ruby.
#PHP is primarily a server-side scripting language. This means the code runs on the web server before the content is sent to the user's browser.  This allows for generating dynamic web pages that can adapt based on user input or data from databases.
#While PHP can be used for more than web development, it excels in creating websites and web applications.  It can be used to build a variety of features such as user login systems, shopping carts, and content management systems.  Many popular websites, including WordPress, are built using PHP.
#~: This symbol indicates that the following pattern is a regular expression.
#[^/]\.php: This part matches any string that starts with a character other than a forward slash (/), followed by a literal dot (.), and then the literal string .php. This essentially matches any filename that ends with .php extension, but excludes files within directories (since the path cannot contain forward slashes before the .php).
#(/|$): This part matches either a forward slash (/) or the end of the string ($). This allows the pattern to match files that either have additional parameters after the .php extension (like index.php/param1/param2) or just the base filename itself (like index.php).
